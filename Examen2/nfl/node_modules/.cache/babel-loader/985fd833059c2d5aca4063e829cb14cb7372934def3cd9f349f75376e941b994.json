{"ast":null,"code":"var _jsxFileName = \"/home/armas/Escritorio/React/nfl/src/component/AllTodosIds.jsx\",\n  _s = $RefreshSig$();\n// AllTodosIds.jsx\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AllTodosIds = () => {\n  _s();\n  const [todosIds, setTodosIds] = useState([]);\n  useEffect(() => {\n    const fetchTodosIds = async () => {\n      try {\n        const response = await axios.get('http://jsonplaceholder.typicode.com/todos');\n        const todos = response.data;\n        const todosIds = todos.map(todo => todo.id);\n        setTodosIds(todosIds);\n      } catch (error) {\n        console.error('Error fetching todos IDs:', error);\n      }\n    };\n    fetchTodosIds();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Lista de todos los pendientes (solo IDs)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: todosIds.map(todoId => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: `ID: ${todoId}`\n      }, todoId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(AllTodosIds, \"NZHGUQ2Z2vTs0S4QYSDcgSeeFC8=\");\n_c = AllTodosIds;\nexport default AllTodosIds;\nvar _c;\n$RefreshReg$(_c, \"AllTodosIds\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","AllTodosIds","_s","todosIds","setTodosIds","fetchTodosIds","response","get","todos","data","map","todo","id","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","todoId","_c","$RefreshReg$"],"sources":["/home/armas/Escritorio/React/nfl/src/component/AllTodosIds.jsx"],"sourcesContent":["// AllTodosIds.jsx\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst AllTodosIds = () => {\n  const [todosIds, setTodosIds] = useState([]);\n\n  useEffect(() => {\n    const fetchTodosIds = async () => {\n      try {\n        const response = await axios.get('http://jsonplaceholder.typicode.com/todos');\n        const todos = response.data;\n        const todosIds = todos.map(todo => todo.id);\n        setTodosIds(todosIds);\n      } catch (error) {\n        console.error('Error fetching todos IDs:', error);\n      }\n    };\n\n    fetchTodosIds();\n  }, []);\n\n  return (\n    <div>\n      <h2>Lista de todos los pendientes (solo IDs)</h2>\n      <ul>\n        {todosIds.map(todoId => (\n          <li key={todoId}>{`ID: ${todoId}`}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default AllTodosIds;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd,MAAMQ,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,2CAA2C,CAAC;QAC7E,MAAMC,KAAK,GAAGF,QAAQ,CAACG,IAAI;QAC3B,MAAMN,QAAQ,GAAGK,KAAK,CAACE,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,CAAC;QAC3CR,WAAW,CAACD,QAAQ,CAAC;MACvB,CAAC,CAAC,OAAOU,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD;IACF,CAAC;IAEDR,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAAe,QAAA,gBACEf,OAAA;MAAAe,QAAA,EAAI;IAAwC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjDnB,OAAA;MAAAe,QAAA,EACGZ,QAAQ,CAACO,GAAG,CAACU,MAAM,iBAClBpB,OAAA;QAAAe,QAAA,EAAmB,OAAMK,MAAO;MAAC,GAAxBA,MAAM;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAuB,CACvC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACjB,EAAA,CA5BID,WAAW;AAAAoB,EAAA,GAAXpB,WAAW;AA8BjB,eAAeA,WAAW;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}